#
# Action 53 linker script
# Original copyright 2010 Damian Yerrick
#
# Copying and distribution of this file, with or without
# modification, are permitted in any medium without royalty
# provided the copyright notice and this notice are preserved.
# This file is offered as-is, without any warranty.
#
MEMORY {
  ZP:     start = $10, size = $f0, type = rw;
  # use first $10 zeropage locations as locals
  HEADER: start = 0, size = $0010, type = ro, file = %O, fill=yes, fillval=$00;
  RAM:    start = $0300, size = $0300, type = rw; # Reserve 6xx and 7xx for level data for now
  ROM00:  start = $8000, size = $4000, type = ro, file = %O, fill=yes, fillval=$FF, bank=0;
  ROM01:  start = $8000, size = $4000, type = ro, file = %O, fill=yes, fillval=$FF, bank=1;
  ROM02:  start = $8000, size = $4000, type = ro, file = %O, fill=yes, fillval=$FF, bank=2;
  ROM03:  start = $C000, size = $4000, type = ro, file = %O, fill=yes, fillval=$FF, bank=3;
}

SEGMENTS {
  ZEROPAGE: load = ZP, type = zp;
  BSS:      load = RAM, type = bss, define = yes, align = $100;

  INESHDR:  load = HEADER, type = ro, align = $10;
  BANK00:   load = ROM00, type = ro, align = $100, optional = yes;
  BANK01:   load = ROM01, type = ro, align = $100, optional = yes;
  BANK02:   load = ROM02, type = ro, align = $100, optional = yes;
  CODE:     load = ROM03, type = ro, align = $100;
  RODATA:   load = ROM03, type = ro, align = $100;

  LevelData:       load = ROM00, type = ro, align = $100, optional = yes;
  LevelSpriteData: load = ROM00, type = ro, align = $100, optional = yes;
  BlockData:       load = ROM01, type = ro, align = $100, optional = yes;
  BlockCode:       load = ROM01, type = ro, align = $100, optional = yes;

  STUB00:   load = ROM00, type = ro, start = $BFEC;
  STUB01:   load = ROM01, type = ro, start = $BFEC;
  STUB02:   load = ROM02, type = ro, start = $BFEC;
  STUB03:   load = ROM03, type = ro, start = $FFEC;
}

FILES {
  %O: format = bin;
}
